<!DOCTYPE html>
<html>

<head>
  <link rel='stylesheet' href='/stylesheets/display.css'>
  <!-- setup Title Tab -->
  <title>
    <%= tabtitle %>
  </title>
  <!-- load debug script -->
  <script type="text/javascript" src="/javascripts/debug_browserify.js"></script>
  <!-- load jQUery -->
  <script src="https://code.jquery.com/jquery-1.11.1.js"></script>
  <!-- load functions -->
  <script type="text/javascript">
    function timedRefresh(timeoutPeriod) {
      setTimeout("location.reload(true);", timeoutPeriod);
    }
  </script>
  <!-- load documentReady jQuery methods -->
  <script>
    // ENV mode for console.logging
    var mode
    $(document).ready(function() {
      //Submit request for systems ENV-mode:
      $.ajax({
        type: 'GET',
        url: '/mode',
        success: function(response) {
          mode = response
          console.log('client_mode: ' + mode)
        },
        error: function(request, textStatus, errorThrown) {
          console.log('client_mode not reported')
        }
      });
      // array to store the image-URLS
      var urls = []
      // array to stores a time-marker per image-URL
      var markers = []
      //array index for currently-displayed image from url-array
      var url_index;
      // length of video
      var vid_duration;
      // display-duration for each image-url in the array
      var pic_duration;
      // define time-regions for pop-up-title, text-display, image-display
      var popupStart = 6.2;
      var popupEnd = 11.3;
      // time-period during which popup-title is displayed
      var popup_duration = popupEnd - popupStart;
      var imagesStart = 17.6;
      var imagesEnd = 41.1;
      // time-period during which images/story are displayed
      var image_duration = imagesEnd - imagesStart;
      // current video playback time
      var currentTime

      // on startup metadata save vid_duration
      var vid = document.getElementById("videoPlayer");
      vid.onloadedmetadata = function() {
        if (mode == 'development') {
          console.log('First Page Visit');
        }
        // parse returned JSON from database
        var data = <%-JSON.stringify(data)%>;
        if (mode == 'development') {
          console.log(data);
        }
        var title = data.title;
        var story = data.story;
        var content = data.content;
        if (mode == 'development') {
          console.log("Title:" + title + '\n' + 'Story:' + story);
        }
        // pass title/story text into innerHTML
        document.getElementById("popup_title_text").innerHTML = title;
        document.getElementById("scroller").innerHTML = story;
        // load all image-urls into an array
        for (var key in content) {
          urls.push(content[key]);
          if (mode == 'development') {
            console.log(content[key]);
          }
        }
        // calculate durations/periods
        pic_duration = image_duration / urls.length;
        vid_duration = vid.duration;
        if (mode == 'development') {
          console.log("Meta data loaded... video_duration:" + vid_duration + ' pic_duration:' + pic_duration);
        }
        // populate the marker-array with durations/periods/timecodes
        for (i = 1; i <= urls.length; i++) {
          markers.push(imagesStart + pic_duration * i);
          if (mode == 'development') {
            console.log('marker: ' + markers[i - 1]);
          }
        }
        if (mode == 'development') {
          console.log('No of image: ' + urls.length);
        }
        // load the first image-URL picture
        url_index = 0
        if (mode == 'development') {
          console.log('loading the first image: ' + urls[url_index]);
        }
        document.getElementById("image").src = urls[url_index];
      };

      // during playback report currenttime
      $("#videoPlayer").on("timeupdate", function(event) {
        if (mode == 'development') {
          console.log('currentTime: ' + this.currentTime);
        }
        currentTime = this.currentTime;
        if (currentTime >= markers[url_index]) {
          url_index++;
          if (url_index < urls.length) {
            if (mode == 'development') {
              console.log('New url_index: ' + url_index);
            }
            document.getElementById("image").src = urls[url_index];
          }
        }
        if (currentTime <= popupStart) {
          //jump to time during DEV mode
          //this.currentTime = 7.0;
          //this.currentTime = 16.0;
        } else if (currentTime >= popupStart && currentTime <= popupEnd) {
          $("#popup_title").show()
        } else if (currentTime >= imagesStart && currentTime <= imagesEnd) {
          $("#image_frame").show()
          $("#image").show()
          $("#scroller_div").show()
        } else {
          $("#popup_title").hide()
          $("#image_frame").hide()
          $("#image").hide()
          $("#panel_title").hide()
          $("#scroller_div").hide()
        }
      });
      // detect when video-playback complete.. if true request new-story db-data
      $("#videoPlayer").on("ended", function(event) {
        if (mode == 'development') {
          console.log('video ended... seeking new db-data ');
        }
        //location.reload(true);
        //window.location.reload(true);
        $.get("request_new_story", function(data, status) {
          if (mode == 'development') {
            console.log('Refreshed Page');
            console.log(data);
          }
          // on-re-start metadata save vid_duration
          var vid = document.getElementById('videoPlayer');
          vid.onloadedmetadata = function() {
            //reset arrays
            urls = []
            markers = []
            // parse in data
            title = data.title;
            story = data.story;
            content = data.content;
            if (mode == 'development') {
              console.log("New title:" + title + '\n' + 'New story:' + story);
            }
            // pass title/story text into innerHTML
            document.getElementById("popup_title_text").innerHTML = title;
            document.getElementById("scroller").innerHTML = story;
            // load all image-urls into an array
            for (var key in content) {
              urls.push(content[key]);
              if (mode == 'development') {
                console.log(content[key]);
              }
            }
            // calculate durations/periods
            pic_duration = image_duration / urls.length;
            vid_duration = vid.duration;
            if (mode == 'development') {
              console.log("Meta data loaded... video_duration:" + vid_duration + ' pic_duration:' + pic_duration);
            }
            // populate the marker-array with durations/periods/timecodes
            for (i = 1; i <= urls.length; i++) {
              markers.push(imagesStart + pic_duration * i);
              if (mode == 'development') {
                console.log('marker: ' + markers[i - 1]);
              }
            }
            if (mode == 'development') {
              console.log('No of image: ' + urls.length);
            }
            // load the first image-URL picture
            url_index = 0
            if (mode == 'development') {
              console.log('loading the first image: ' + urls[url_index]);
            }
            document.getElementById("image").src = urls[url_index];
          };

          //restart video
          vid.currentTime = 0;
          vid.load();

        });
      });
    });
  </script>
</head>

<body>
  <!-- fullscreen scripts -->
  <script src="/screenfull/dist/screenfull.js"></script>
  <script>
    $(function() {
      $('#btnFullscreen').click(function() {
        if (mode == 'development') {
          console.log('click');
        }
        screenfull.toggle($('#videoContainer')[0]);
        //screenfull.toggle($('#videoContainer')[0]);
        //screenfull.toggle($('#videoPlayer')[0]);
        //screenfull.toggle($('#videoMessage')[0]);
      });

      function fullscreenchange() {
        var elem = screenfull.element;
        $('#status').text('Is fullscreen: ' + screenfull.isFullscreen);
        if (elem) {
          $('#element').text('Element: ' + elem.localName + (elem.id ? '#' + elem.id : ''));
        }
        if (!screenfull.isFullscreen) {
          $('#external-iframe').remove();
          document.body.style.overflow = 'auto';
        }
      }
      screenfull.on('change', fullscreenchange);
      // Set the initial values
      fullscreenchange();
    });
  </script>

  <!-- video block... blue outline-colour  to mute add attr: muted controls="true"  -->
  <div id="videoContainer" class="parent">

    <video id="videoPlayer" preload="metadata" autoplay="true" controls> video not supported
        <source src="/videos/aljazeera-desktop.m4v"></source>
        </video>

    <!-- popup title text -->
    <div id="popup_title" style="display:none">
      <p id="popup_title_text">Default popup-title text... </p>
    </div>

    <!-- image frame outline -->
    <div id="image_frame" style="display:none">
      <!-- image url overlays -->
      <img id="image" style="display:none" />
    </div>

    <!-- scrolling text overlay -->
    <div id="scroller_div" class="scroll-left" style="display:none">
      <p id="scroller">Default scrolling story text... </p>
    </div>


    <!-- end video block -->
  </div>

  <!-- fullscreen toggle button -->
  <div id="button_div">
    <p>
      <button id="btnFullscreen" type="button">Fullscreen</button>
    </p>
  </div>

</body>

</html>
